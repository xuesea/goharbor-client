// Code generated by go-swagger; DO NOT EDIT.

package purge

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/xuesea/goharbor-client/v5/apiv2/model"
)

// UpdatePurgeScheduleReader is a Reader for the UpdatePurgeSchedule structure.
type UpdatePurgeScheduleReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdatePurgeScheduleReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdatePurgeScheduleOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUpdatePurgeScheduleBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewUpdatePurgeScheduleUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewUpdatePurgeScheduleForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewUpdatePurgeScheduleInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewUpdatePurgeScheduleOK creates a UpdatePurgeScheduleOK with default headers values
func NewUpdatePurgeScheduleOK() *UpdatePurgeScheduleOK {
	return &UpdatePurgeScheduleOK{}
}

/*UpdatePurgeScheduleOK handles this case with default header values.

Updated purge's schedule successfully.
*/
type UpdatePurgeScheduleOK struct {
}

func (o *UpdatePurgeScheduleOK) Error() string {
	return fmt.Sprintf("[PUT /system/purgeaudit/schedule][%d] updatePurgeScheduleOK ", 200)
}

func (o *UpdatePurgeScheduleOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdatePurgeScheduleBadRequest creates a UpdatePurgeScheduleBadRequest with default headers values
func NewUpdatePurgeScheduleBadRequest() *UpdatePurgeScheduleBadRequest {
	return &UpdatePurgeScheduleBadRequest{}
}

/*UpdatePurgeScheduleBadRequest handles this case with default header values.

Bad request
*/
type UpdatePurgeScheduleBadRequest struct {
	/*The ID of the corresponding request for the response
	 */
	XRequestID string

	Payload *model.Errors
}

func (o *UpdatePurgeScheduleBadRequest) Error() string {
	return fmt.Sprintf("[PUT /system/purgeaudit/schedule][%d] updatePurgeScheduleBadRequest  %+v", 400, o.Payload)
}

func (o *UpdatePurgeScheduleBadRequest) GetPayload() *model.Errors {
	return o.Payload
}

func (o *UpdatePurgeScheduleBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header X-Request-Id
	o.XRequestID = response.GetHeader("X-Request-Id")

	o.Payload = new(model.Errors)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdatePurgeScheduleUnauthorized creates a UpdatePurgeScheduleUnauthorized with default headers values
func NewUpdatePurgeScheduleUnauthorized() *UpdatePurgeScheduleUnauthorized {
	return &UpdatePurgeScheduleUnauthorized{}
}

/*UpdatePurgeScheduleUnauthorized handles this case with default header values.

Unauthorized
*/
type UpdatePurgeScheduleUnauthorized struct {
	/*The ID of the corresponding request for the response
	 */
	XRequestID string

	Payload *model.Errors
}

func (o *UpdatePurgeScheduleUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /system/purgeaudit/schedule][%d] updatePurgeScheduleUnauthorized  %+v", 401, o.Payload)
}

func (o *UpdatePurgeScheduleUnauthorized) GetPayload() *model.Errors {
	return o.Payload
}

func (o *UpdatePurgeScheduleUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header X-Request-Id
	o.XRequestID = response.GetHeader("X-Request-Id")

	o.Payload = new(model.Errors)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdatePurgeScheduleForbidden creates a UpdatePurgeScheduleForbidden with default headers values
func NewUpdatePurgeScheduleForbidden() *UpdatePurgeScheduleForbidden {
	return &UpdatePurgeScheduleForbidden{}
}

/*UpdatePurgeScheduleForbidden handles this case with default header values.

Forbidden
*/
type UpdatePurgeScheduleForbidden struct {
	/*The ID of the corresponding request for the response
	 */
	XRequestID string

	Payload *model.Errors
}

func (o *UpdatePurgeScheduleForbidden) Error() string {
	return fmt.Sprintf("[PUT /system/purgeaudit/schedule][%d] updatePurgeScheduleForbidden  %+v", 403, o.Payload)
}

func (o *UpdatePurgeScheduleForbidden) GetPayload() *model.Errors {
	return o.Payload
}

func (o *UpdatePurgeScheduleForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header X-Request-Id
	o.XRequestID = response.GetHeader("X-Request-Id")

	o.Payload = new(model.Errors)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdatePurgeScheduleInternalServerError creates a UpdatePurgeScheduleInternalServerError with default headers values
func NewUpdatePurgeScheduleInternalServerError() *UpdatePurgeScheduleInternalServerError {
	return &UpdatePurgeScheduleInternalServerError{}
}

/*UpdatePurgeScheduleInternalServerError handles this case with default header values.

Internal server error
*/
type UpdatePurgeScheduleInternalServerError struct {
	/*The ID of the corresponding request for the response
	 */
	XRequestID string

	Payload *model.Errors
}

func (o *UpdatePurgeScheduleInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /system/purgeaudit/schedule][%d] updatePurgeScheduleInternalServerError  %+v", 500, o.Payload)
}

func (o *UpdatePurgeScheduleInternalServerError) GetPayload() *model.Errors {
	return o.Payload
}

func (o *UpdatePurgeScheduleInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header X-Request-Id
	o.XRequestID = response.GetHeader("X-Request-Id")

	o.Payload = new(model.Errors)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
